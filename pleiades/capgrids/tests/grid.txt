Test of the grid class

  >>> from pleiades.capgrids import Grid
  >>> grid = Grid('35', 'E2')
  >>> grid.bounds
  (12.0, 32.0, 13.0, 33.0)
  >>> grid.id
  'http://atlantides.org/capgrids/35/e2'
  >>> grid.Title()
  'Barrington Atlas map 35, grid square E2'
  >>> grid.Description()
  'Footprint and attributes of Barrington Atlas map 35, grid square E2'
  >>> grid.Creator()
  'Classical Atlas Project, edited by R. Talbert'
  
Test adapters

  >>> from zope.dublincore.interfaces import ICMFDublinCore
  >>> dc = ICMFDublinCore(grid)
  >>> dc.Title()
  'Barrington Atlas map 35, grid square E2'
  >>> dc.Description()
  'Footprint and attributes of Barrington Atlas map 35, grid square E2'

  >>> from collective.geo.geographer.interfaces import IGeoreferenced
  >>> geo = IGeoreferenced(grid)
  >>> geo.type
  'Polygon'
  >>> geo.coordinates
  (((12.0, 32.0), (12.0, 33.0), (13.0, 33.0), (13.0, 32.0), (12.0, 32.0)),)

Get a grid from a URL

  >>> from pleiades.capgrids import parseURL
  >>> params = parseURL("http://atlantides.org/capgrids/35/e2")
  >>> assert params == parseURL("http://atlantides.org/capgrids/35/e2/")
  >>> Grid(*params).bounds
  (12.0, 32.0, 13.0, 33.0)

Test the case of no grid

  >>> Grid(*parseURL("http://atlantides.org/capgrids/100")).bounds
  (-30.0, 20.0, 65.0, 55.0)

Test extended grids

  >>> Grid(*parseURL("http://atlantides.org/capgrids/4/a1+e2")).bounds
  (35.0, 15.0, 60.0, 25.0)



